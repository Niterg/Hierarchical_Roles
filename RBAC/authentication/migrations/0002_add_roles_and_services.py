# Generated by Django 5.1.6 on 2025-02-28 17:06

from django.db import migrations


def create_roles_and_services(apps, schema_editor):
    Role = apps.get_model('myapp', 'Role')
    Service = apps.get_model('myapp', 'Service')
    RolePermission = apps.get_model('myapp', 'RolePermission')

    # Create Services
    service_p = Service.objects.create(name="P")
    service_q = Service.objects.create(name="Q")
    service_r = Service.objects.create(name="R")
    service_s = Service.objects.create(name="S")
    service_t = Service.objects.create(name="T")
    service_u = Service.objects.create(name="U")

    # Create Roles
    admin_role = Role.objects.create(name="Admin")
    role_a = Role.objects.create(name="A", parent=admin_role)
    role_b = Role.objects.create(name="B", parent=role_a)

    # Assign RolePermissions
    RolePermission.objects.create(
        role=admin_role, service=service_p, can_assign_roles=True, can_use_service=True)
    RolePermission.objects.create(
        role=admin_role, service=service_q, can_assign_roles=True, can_use_service=True)
    RolePermission.objects.create(
        role=admin_role, service=service_r, can_assign_roles=True, can_use_service=True)
    RolePermission.objects.create(
        role=admin_role, service=service_s, can_assign_roles=True, can_use_service=True)

    RolePermission.objects.create(
        role=role_a, service=service_q, can_assign_roles=True, can_use_service=True)
    RolePermission.objects.create(
        role=role_a, service=service_r, can_assign_roles=False, can_use_service=True)
    RolePermission.objects.create(
        role=role_a, service=service_s, can_assign_roles=True, can_use_service=True)

    RolePermission.objects.create(
        role=role_b, service=service_s, can_assign_roles=False, can_use_service=True)


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_roles_and_services),
    ]
